[{"/Users/uday/Desktop/kaya/redux/src/index.js":"1","/Users/uday/Desktop/kaya/reduxjs/src/index.js":"2"},{"size":3185,"mtime":1612333819724,"results":"3","hashOfConfig":"4"},{"size":3185,"mtime":1612424871801,"results":"5","hashOfConfig":"6"},{"filePath":"7","messages":"8","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q7w8kp",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"10oba98","/Users/uday/Desktop/kaya/redux/src/index.js",["12"],"/Users/uday/Desktop/kaya/reduxjs/src/index.js",["13"],"import { render } from \"react-dom\";\nimport { createStore, combineReducers } from \"redux\";\nimport { useRef } from \"react\";\n\nfunction todo(state, action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state, {\n          id: action.id, text: action.text, completed: false\n        }];\n    case 'TOGGLE_TODO':\n      if (action.id !== state.id) {\n        return state;\n      }\n      return { ...state, completed: !state.completed }\n\n    default:\n      return state;\n  }\n}\n\nfunction todos(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return todo(state, action);\n    case 'TOGGLE_TODO':\n      return state.map(t => todo(t, action));\n    default:\n      return state;\n  }\n}\n\nfunction setVisibilityFilter(state = 'SHOW_ALL', action) {\n  switch (action.type) {\n    case 'SET_FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n}\n\nfunction filterSettings(todos, filter) {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed)\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed)\n    default:\n      return todos\n  }\n}\n\nconst todoReducer = combineReducers({ todos, setVisibilityFilter })\n// function todoReducer(state = {}, action) {\n//   return {\n//     todos: todos((state.todos), action),\n//     setVisibilityFilter: setVisibilityFilter((state.setVisibilityFilter), action)\n//   }\n// }\n\nconst store = createStore(todoReducer);\nlet index = 0;\n\nfunction Filter({ filter, children }) {\n  const currentFilter = store.getState().setVisibilityFilter\n  if (filter === currentFilter) {\n    return <span style={{ margin: '4px', padding: '4px' }} >{children}</span>\n  }\n  return (\n    <a href=\"#\" style={{ margin: '4px', padding: '4px' }} onClick={(e) => {\n      e.preventDefault();\n      store.dispatch({\n        type: 'SET_FILTER',\n        filter\n      })\n    }}>{children}</a>\n  )\n}\n\nfunction App({ todos, setVisibilityFilter }) {\n  const textElement = useRef('hi');\n  const filterTool = filterSettings(todos, setVisibilityFilter);\n  return (\n    <form>\n      <input ref={textElement}></input>\n      <button type='submit' onClick={(e) => {\n        e.preventDefault();\n        store.dispatch({\n          type: 'ADD_TODO', id: index++, text: textElement.current.value\n        })\n        textElement.current.value = '';\n      }}>Add TODO</button>\n      <ul>\n        {filterTool.map((todo) => {\n          return (\n            <li key={todo.id} onClick={() => {\n              store.dispatch({\n                type: 'TOGGLE_TODO',\n                id: todo.id,\n              })\n            }} style={{\n              textDecoration: todo.completed ?\n                'line-through' : 'none'\n            }}>{todo.text}</li>\n          )\n        }\n        )}\n      </ul>\n      <p>\n        show:\n\n        <Filter filter='SHOW_ALL' children='All' />\n        <Filter filter='SHOW_ACTIVE' children='Active' />\n        <Filter filter='SHOW_COMPLETED' children='Completed' />\n\n\n      </p>\n\n\n    </form>\n  )\n}\n\nfunction renderApp() {\n  render(<App {...store.getState()} />, document.getElementById('root'));\n}\n\nstore.subscribe(renderApp);\nrenderApp();\n",{"ruleId":"14","severity":1,"message":"15","line":73,"column":5,"nodeType":"16","endLine":79,"endColumn":8},{"ruleId":"14","severity":1,"message":"15","line":73,"column":5,"nodeType":"16","endLine":79,"endColumn":8},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]